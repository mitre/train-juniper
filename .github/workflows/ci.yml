name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

env:
  RUBY_VERSION: '3.3'

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        ruby-version: ['3.1', '3.2', '3.3']
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Ruby ${{ matrix.ruby-version }}
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true
        
    - name: Run tests
      run: |
        bundle exec rake test
        
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      if: matrix.ruby-version == env.RUBY_VERSION && matrix.os == 'ubuntu-latest'
      with:
        file: ./coverage/.resultset.json
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.RUBY_VERSION }}
        bundler-cache: true
        
    - name: Run RuboCop
      run: |
        bundle exec rubocop --format github --fail-level convention

  quality:
    runs-on: ubuntu-latest
    needs: [test, lint]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ env.RUBY_VERSION }}
        bundler-cache: true
        
    - name: Check test coverage
      run: |
        bundle exec rake test
        echo "## Coverage Report" >> $GITHUB_STEP_SUMMARY
        coverage=$(grep -o '[0-9]*\.[0-9]*%' coverage/index.html | head -1)
        echo "Current coverage: $coverage" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ Tests passed on: Linux, Windows, macOS" >> $GITHUB_STEP_SUMMARY
        echo "✅ Ruby versions tested: 3.1, 3.2, 3.3" >> $GITHUB_STEP_SUMMARY
        
    - name: Generate coverage report
      run: |
        bundle exec ruby utils/coverage_analysis.rb --format markdown --output docs/coverage-report.md
        echo "✅ Coverage report generated" >> $GITHUB_STEP_SUMMARY
        
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: docs/coverage-report.md
        
    - name: Validate gem build
      run: |
        gem build train-juniper.gemspec
        echo "✅ Gem builds successfully" >> $GITHUB_STEP_SUMMARY