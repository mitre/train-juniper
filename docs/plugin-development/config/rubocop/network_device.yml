# RuboCop configuration for network device Train plugins
# Use this in addition to train_plugin_base.yml for network transport plugins

# Network plugins need larger complexity allowances
Metrics/ClassLength:
  Max: 300  # Connection classes handle SSH, auth, commands, platform detection

Metrics/MethodLength:
  Max: 60   # SSH setup, proxy config, session initialization

Metrics/AbcSize:
  Max: 60   # Complex network setup methods (connect, initialize)

Metrics/CyclomaticComplexity:
  Max: 25   # Network auth and proxy logic

Metrics/PerceivedComplexity:
  Max: 25   # Error handling for network scenarios

Metrics/ModuleLength:
  Max: 120  # Platform detection modules need more space

# Network paths and error messages can be long
Layout/LineLength:
  Max: 140

# Network plugins have complex error handling patterns
Style/GuardClause:
  Enabled: false  # Complex nested error handling for connection failures

# Network commands often return similar results for different scenarios
Style/IdenticalConditionalBranches:
  Enabled: false  # Different network paths may return similar results

# Network plugins commonly filter credentials in consistent ways
Style/HashExcept:
  Enabled: false  # Consistent credential filtering patterns

# Network connection safety patterns
Style/SafeNavigation:
  Exclude:
    - 'lib/**/connection.rb'  # Complex SSH connection logic

# Logger output in network plugins
Style/GlobalStdStream:
  Exclude:
    - 'lib/**/connection.rb'  # Logger defaults to STDOUT for network plugins

# Platform detection often has expected duplicate mappings
Lint/DuplicateBranch:
  Exclude:
    - 'lib/**/platform.rb'  # Architecture detection has expected duplicates

# Network devices don't support traditional file operations
Lint/UnusedMethodArgument:
  Exclude:
    - 'lib/**/connection.rb'  # upload/download methods intentionally raise NotImplementedError